{
"buildpacks": [
{
"url": "heroku/python"
}
],
"description": "Webapp is intended to take saved posts from your Reddit Account and upload a copy of the media to your desired telegram channel. The code may be modified to post from subreddits or other sources as well.",
"env": {
"TELEGRAM_BOT_TOKEN": {
"description": "Telegram bot token generated by @BotFather. Must be added to required channel as well.",
"value": ""
},
"TELEGRAM_CHAT_ID": {
"description": "Chat ID of the channel you want your posts in. Must be an integer. Refer repo readme for instructions.",
"value": ""
},
"FILEBASE_KEY": {
"description": "Filebase Key, generated directly.",
"value": ""
},
"FILEBASE_SECRET": {
"description": "Filebase Secret, generated directly.",
"value": ""
},
"FILEBASE_BUCKET_NAME": {
"description": "Filebase Bucket Name, need to create before starting webapp.",
"value": ""
},
"REDDIT_USER_AGENT": {
"description": "Reddit user agent, can be any string.",
"value": "ReScrapper"
},
"REDDIT_CLIENT_ID": {
"description": "Reddit Client ID, obtained from reddit.",
"value": ""
},
"REDDIT_CLIENT_SECRET": {
"description": "Reddit Secret, obtained from reddit.",
"value": ""
},
"REDDIT_USERNAME": {
"description": "Reddit Username",
"value": ""
},
"REDDIT_PASSWORD": {
"description": "Reddit Password",
"value": ""
},
"PHOTOS_WEBHOOK": {
"description": "Discord webhook URL, photo post ids are posted here.",
"value": ""
},
"ANIMATIONS_WEBHOOK": {
"description": "Discord webhook URL, animation post ids are posted here.",
"value": ""
},
"VIDEOS_WEBHOOK": {
"description": "Discord webhook URL, video post ids are posted here.",
"value": ""
},
"AUDIO_WEBHOOK": {
"description": "Discord webhook URL, audio post ids are posted here.",
"value": ""
},
"DOCUMENTS_WEBHOOK": {
"description": "Discord webhook URL, document post ids are posted here.",
"value": ""
},
"MESSAGES_WEBHOOK": {
"description": "Discord webhook URL, message only post ids are posted here.",
"value": ""
},
"GROUP_WEBHOOK": {
"description": "Discord webhook URL, media group post ids are posted here.",
"value": ""
},
"FAILED_WEBHOOK": {
"description": "Discord webhook URL, failed post ids are posted here.",
"value": ""
},
"SLEEP_BETWEEN_POSTS": {
"description": "Sleep after each post, recommended to set for limiting API usage, a sleep of 10xSLEEP_BETWEEN_POSTS will happen after every REFRESH_AFTER_POSTS posts.",
"value": "2"
},
"IDLE_SLEEP": {
"description": "Sleep duration in seconds if posts not found, recommended to set for limiting API usage.",
"value": "600"
},
"SLEEP_ON_FAILED_GET": {
"description": "Sleep duration in seconds on a failed GET request, recommended to set for limiting usage.",
"value": "20"
},
"GET_ATTEMPTS": {
"description": "Total number of attemps to be made on a GET request, considered as failure if 200(OK) not received.",
"value": "3"
},
"SLEEP_ON_FAILED_POST": {
"description": "Sleep duration in seconds on a failed POST request, recommended to set for limiting usage.",
"value": "20"
},
"POST_ATTEMPTS": {
"description": "Total number of attemps to be made on a POST request, considered as failure if 200(OK) not received.",
"value": "3"
},
"REFRESH_AFTER_POSTS": {
"description": "After how many posts should bot frequently check for new posts, set lower for higher frequency, minimum value of 5.",
"value": "10"
}
},
"formation": {
"worker": {
"quantity": 1,
"size": "free"
}
},
"keywords": [
"Reddit",
"Telegram",
"Scraper"
],
"name": "Telegram Bot for Reddit Scraping",
"repository": "github.com/psantheus/ReScrapper"
}